#-----------------------------------------------------------------------------------------------------------------------------------------------------
# Author:   Tim Boyarski                                    
# Date:	    2017-06-30
#-----------------------------------------------------------------------------------------------------------------------------------------------------
## Call: call("python " + snakeDIR + "/modules/bamUtil/bamUtil.py " + YAMLFILE + " " + CLUSTERFILE + " " + SNAKEFILE, shell=True)
# Input:                                    {sample}.bam
#
# Output:                                   {sample}_clean.bam      
#
# Purpose: Clean up a '.bam' file.                
#
#   **NOTE** This module was not used in any makefile calls.
#-----------------------------------------------------------------------------------------------------------------------------------------------------
# PYTHON PACKAGES #
#------------------
# Used for timestamping the log files.
from time import localtime, strftime

# Used for system calls.
from subprocess import call
#-----------------------------------------------------------------------------------------------------------------------------------------------------



#-----------------------------------------------------------------------------------------------------------------------------------------------------
# SNAKEMAKE RULE #
#-----------------
rule endUtilBAM:
    input: 
        inputBAM = "{pathEUB}/{sampleEUB}.bam"
    output:
        endUtilBAM = "{pathEUB}/{sampleEUB}_endUtil.bam"
    log:
        stdErr = "log/" + config["bamUtilDIR"] + '/endUtilBAM/endUtilBAM_{sampleEUB}.' + strftime("%Y-%m-%d.%H-%M-%S", localtime()) + '.stderr'
    run:
        # 1.A - Base call string. 
        callString='cp ' + str(input.inputBAM) + ' ' + str(output.endUtilBAM)

        # 1.B - Differing output redirection as when not on cluster we cannot use the cluster config file.
        if config["offCluster"]:
            callString += ' &> ' + str(log.stdErr)

        # 2.A - Printing system calls to a local file, and then executing them.
        call('echo "' + str(log.stdErr)[:-7] + ':\n' + callString + '\n" >> ' + config["shellCallFile"], shell=True)
        call(callString, shell=True)
#-----------------------------------------------------------------------------------------------------------------------------------------------------
