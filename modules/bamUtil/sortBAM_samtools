#-----------------------------------------------------------------------------------------------------------------------------------------------------
# Author:   Tim Boyarski                                        
# Date:	    2017-06-14
#-----------------------------------------------------------------------------------------------------------------------------------------------------
# Call: call("python " + snakeDIR + "/modules/bamUtil/bamUtil.py " + YAMLFILE + " " + CLUSTERFILE + " " + SNAKEFILE, shell=True)
# Input:                                            {sample}.bam
#
# Output:                                           {sample}_sorted.bam 
#
# Purpose: Produce a sorted BAM file, using Samtools. 
#
#   **NOTE** During development, it was required to run with    
#       Samtools 0.1.18. Currently it is unknown if this is     
#       compatible with newever versions of Samtools. The       
#       outputSUFFIX argument may be v0.1.18 specific.          
#
#   **NOTE** Rule precedence to eliminate ambiguity, as both the 
#       the following rules can produce the same output. It is 
#       important to sort the '.bam' files before we merge them.
#           -ruleorder: sortBAM_samtools > mergeBAM
#-----------------------------------------------------------------------------------------------------------------------------------------------------
# PYTHON PACKAGES #
#------------------
# Used for system calls.
from subprocess import call

# Used for timestamping the log files.
from time import localtime, strftime
#-----------------------------------------------------------------------------------------------------------------------------------------------------



#-----------------------------------------------------------------------------------------------------------------------------------------------------
# SNAKEMAKE RULE #
#-----------------
rule sortBAM_samtools:
    input:
        inputBAM = "{pathSBS}/{sampleSBS}.bam"
    output:
        sortedBAM = temp("{pathSBS}/{sampleSBS}_sorted.bam")
    log:
        stdErr = "log/" + config["bamUtilDIR"] + '/sortBAM_samtools/sortBAM_samtools_{sampleSBS}.' + strftime("%Y-%m-%d.%H-%M-%S", localtime()) + '.samtools.stderr'
    run:
        # 1.A - Base call string.
        callString=config["bamUtil_samtoolsProg"] + ' sort ' + str(input.inputBAM) + ' ' + str(output.sortedBAM)[:-4]

        # 1.B - Differing output redirection as when not on cluster we cannot use the cluster config file.
        if config["offCluster"]:
            callString += ' 2> ' + str(log.stdErr)

        # 2.A - Printing system calls to a local file, and then executing them.
        call('echo "#' + str(log.stdErr)[:-16] + ':\n#' + callString + '\n" >> ' + config["shellCallFile"], shell=True)
        call(callString, shell=True)
#-----------------------------------------------------------------------------------------------------------------------------------------------------
