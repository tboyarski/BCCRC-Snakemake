#-----------------------------------------------------------
# Author:   Tim Boyarski                                    
# Date:     2017-03-23                                      
#-----------------------------------------------------------
# Call: call("python " + snakeDIR + "/modules/reBam/reBam.py " + YAMLFILE + " " + CLUSTERFILE + " " + SNAKEFILE, shell=True)
# Rule specific configurations set in:      ReBamPlus.json                  
# Rule specific parameters set in:          ReBamPlus.yaml                  
# Input:                                    .BAM                            
# Output:                                   1.fastq                         
#                                           2.fastq                         
#                                           reBam/{sample}{fileTAG}.BAM,    
#                                           reBam/{sample}{fileTAG}.BAM.BAI,
#                                           bam/{sample}.BAM.BAI            
#                                           bam/{sample}.BAM.BAI            
# Purpose: This is a workflow. It will accept and reassemble a raw          
#   .BAM file. Typically this is performed on .BAM files which have         
#   been generated using an unknown or older version of SAMTools.           
#   This process is to ensure consistency, and results in .BAM files        
#   generated from documented versions of SAMTools.                         
#---------------------------------------------------------------------------

# All modules in this workflow require the following paramters to be set.
#       outputDIR:    ~Directory for storing all generated files

########################################################################################################
#                                          Usage Guidelines                                            #
########################################################################################################

# 1st       --- undoBAM should be performed fisrt if the file is provided from an external source
# 2nd       --- alignBAM should be performed second, to generate the '.BAM' file to be used by all subsequent steps. Input 
#                   is the '.fastq' files generated by undoBAM.
# ...
# Optional  --- filteredBAM
# Optional  --- rmdupBAM
# ...
# 2nd Last  --- sortBAM should be performed second last, as it is one of two modules with output not marked as temp. Output
#                   from this module should be kept as it will be used by indexBAM and it will also be used as a symlink target.
# Last      --- indexBAM should be performed last, as it is the other of the two modules with the output not marked as temp.
#                   as well, indexBAM also performs the symlinking of the files to the finalized '.BAM' directory. Perform
#                   this module last so that the correct ".BAM.BAI" is linked.


########################################################################################################
#                                  Include all required Snakefiles.                                    #
########################################################################################################

include: "indexBAM"
# 1 * indexBAM - Indexing of a BAM file
# 1   fileTAG:         ~Used as the last module; tag drives development (E.g. _realigned_sorted)
# 1   reBamDIR:        ~Directory for storing required '.BAM' files and generated '.BAM.BAI' files
# 1   bamDIR:          ~Directory for storing generated '.BAM' and '.BAM.BAI' files

include: "undoBAM"
# 2 * undoBAM - Fastq generation from a BAM file
# 2   inputDIR:        ~Directory for storing files needed prior to starting the pipeline
# 2   rawBamDIR:       ~Directory containing '.BAM' files from external sources to be re-assembled.
# 2   fastqDIR:        ~Directory for storing generated '.FASTQ' files

include: "alignBAM"
# 3 * alignBAM - BAM generation from a Fastq file
# 3   fastqDIR:        ~Directory for storing required '.FASTQ' files
# 3   reBamDIR:        ~Directory for storing generated '.BAM' files
# 3   refDIR:          ~Directory containing reference genome files
# 3   refFILE:         ~Name of reference file inside of reference gnome directory

include: "sortBAM"
# 4 * sortBAM - Sorting of the BAM file, via Picard or BioBam.
# 4   reBamDIR:        ~Directory for storing generated '_sorted.BAM' files

include: "filteredBAM"
# 5 * filteredBAM - Filter out low quality reads.
# 5   reBamDIR:        ~Directory for storing generated '_filtered.BAM' files

include: "rmdupBAM"
# 6 * rmdupBAM - Remove duplicate reads.
# 6   reBamDIR:        ~Directory for storing generated '_rmdup.BAM' files

include: "markdupBAM"
# 7 * markdupBAM - Remove duplicate reads.
# 7   reBamDIR:        ~Directory for storing generated '_rmdup.BAM' files
# 7   metricsDIR:      ~Directory for storing generated 'metrics_dup.txt' files

########################################################################################################
