#---------------------------------------------------------------
# Author:   Tim Boyarski                                        
# Date:	    2017-03-06                                          
#---------------------------------------------------------------
# Call: call("python " + snakeDIR + "/modules/reBam/reBam.py " + YAMLFILE + " " + CLUSTERFILE + " " + SNAKEFILE, shell=True)
# Input:                                            .BAM        
# Output:                                           _sorted.BAM 
# Purpose: Produce a sorted BAM file, using samtools or biobam. 
#---------------------------------------------------------------
from time import localtime, strftime
from subprocess import call

rule sortBAM:
    input:
        expand("{outputDIR}/{reBamDIR}/{{sampleSB}}.bam", outputDIR=config["outputDIR"], reBamDIR=config["reBamDIR"])
    output:
        expand("{outputDIR}/{reBamDIR}/{{sampleSB}}_sorted.bam", outputDIR=config["outputDIR"], reBamDIR=config["reBamDIR"])
    params:
        #Generate output suffix to be used for Samtools 0.1.18, which cannot use a filename flag
        outputSUFFIX = config["outputDIR"] + "/" + config["reBamDIR"] + "/{sampleSB}_sorted",
        logNAME="sortBAM." + strftime("%Y-%m-%d.%H-%M-%S", localtime())
    log:
        "log/" + config["reBamDIR"]
    run:
        if config["sortProg"] == "samtools":
            callString=config["sortBAM_samtoolsProg"] + ' sort ' + str(input) + ' ' + str(params.outputSUFFIX) \
            + ' 2> ' + str(log) + '/' + str(params.logNAME) + '.samtools.stderr'
        else:
            callString=config["sortBAM_samtoolsProg"] + ' view -b ' + str(input) \
            + ' 2> ' + str(log) + '/' + str(params.logNAME) + '.samtools.stderr' \
            + ' | ' + config["sortBAM_bamsortProg"] + ' SO=coordinate tmpfile=' + str(output) + '.tmp > ' + str(output) \ 
            + ' 2> ' + str(log) + '/' + str(params.logNAME) + '.bamsort.stderr'
        call('echo "' + str(params.logNAME) + ':\n ' + callString + '\n" >> ' + config["shellCallFile"], shell=True)
        call(callString, shell=True)
#-------------------------------------------------------------------------------------------------------
