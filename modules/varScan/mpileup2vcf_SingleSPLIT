#-----------------------------------------------------------------------------------------------------------------------------------------------------
# Author:   Tim Boyarski                                    
# Date:     2017-05-24                                      
#-----------------------------------------------------------------------------------------------------------------------------------------------------
# Call: call("python " + ROOT_PATH + "/modules/varScan/varScan.py " + YAMLFILE + " " + CLUSTERFILE + " " + SNAKEFILE, shell=True)
# Input:                                    .chr#.mpileup        
# Output:                                   .chr#.varScan.snp.vcf    
#                                           .chr#.VarScan.indel.vcf
# Purpose: Generate '.VCF' output from a '.mpileup' file. Performs
#   analysis on a per-chromosome basis.
#-----------------------------------------------------------------------------------------------------------------------------------------------------
from time import localtime, strftime
from subprocess import call

rule mpileup2vcf_SingleSPLIT:
    input:
        expand("{outputDIR}/{mpileupDIR}/{{sampleMPU2VCFSS}}_{{chrMPU2VCFSS}}.mpileup", outputDIR=config["outputDIR"], mpileupDIR=config["mpileupDIR"])
    output:
        expand("{outputDIR}/{varScanSplitDIR}/{{sampleMPU2VCFSS}}_{{chrMPU2VCFSS}}.varScan.{{varTypeMPU2VCFSS}}.vcf", outputDIR=config["outputDIR"], varScanSplitDIR=config["varScanSplitDIR"])
    params:
        baseArgs = config["minCOV"]+" "+config["minREAD"]+" "+config["minQUAL"]+" "+config["minFREQ"]+" "+config["pVALUE"]+" "+config["strandFILT"]+" "+config["outVCF"],
        logNAME="mpileup2vcf_SingleSPLIT." + strftime("%Y-%m-%d.%H-%M-%S", localtime())
    log:
        "log/" + config["varScanSplitDIR"] + "/mpileup2vcf_SingleSPLIT/"
    run:
        # 1.A - Base call string.
        callString=config["varScan_varScanProg"] + " mpileup2" + wildcards.varTypeMPU2VCFSS + " " + str(input) + " " + str(params.baseArgs) + " > " \
        + config["outputDIR"] + "/"+ config["varScanSplitDIR"] + "/" + wildcards.sampleMPU2VCFSS + "_" + wildcards.chrMPU2VCFSS + ".varScan." + wildcards.varTypeMPU2VCFSS + ".vcf"

        # 1.B - Differing output redirection as when not on cluster we cannot use the cluster config file.
        if config["offCluster"]:
            callString += ' 2> ' + str(log) + '/' + str(params.logNAME) + '.stderr'

        # 2.A -  Printing system calls to a local file, and then executing them.        
        call('echo "' + str(params.logNAME) + ':\n ' + callString + '\n" >> ' + config["shellCallFile"], shell=True)
        call(callString, shell=True)
#-----------------------------------------------------------------------------------------------------------------------------------------------------
