#-----------------------------------------------------------
# Author:   Tim Boyarski                                    
# Date:     2017-03-06                                      
#-----------------------------------------------------------
# Call: call("python " + ROOT_PATH + "/modules/varScan/varScan.py " + YAMLFILE + " " + CLUSTERFILE + " " + SNAKEFILE, shell=True)
# Rule specific configurations set in:      varScan.json    
# Rule specific parameters set in:          varScan.yaml    
# Input:                                    .mpileup        
# Output:                                   .snps.vcf       
# Purpose: Generate VCF output from a MPileup file. Able to 
#   perform analysis on a per-chromosome basis if requested.
#-----------------------------------------------------------
from time import localtime, strftime
from subprocess import call

rule mpileup2UNSPLIT:
    input:
        expand("{outputDIR}/{mpileDIR}/{{sampleMPU2U}}.mpileup", outputDIR=config["outputDIR"], mpileDIR=config["mpileDIR"])
    output:
        expand("{outputDIR}/{varScanDIR}/{{sampleMPU2U}}.varScan.{{varTypeMPU2U}}.vcf", outputDIR=config["outputDIR"], varScanDIR=config["varScanDIR"])
    params:
        baseArgs = config["minCOV"]+" "+config["minREAD"]+" "+config["minQUAL"]+" "+config["minFREQ"]+" "+config["pVALUE"]+" "+config["strandFILT"]+" "+config["outVCF"],
        logNAME="mpileup2UNSPLIT." + strftime("%Y-%m-%d.%H-%M-%S", localtime())
    log:
        "log/" + config["varScanDIR"]
    run:
        callString=config["mpileup2_varScanProg"] + " mpileup2" + wildcards.varTypeMPU2U + " " + str(input) + " " + str(params.baseArgs) + " > " + str(output) + " 2> " + str(log) + "/" + str(params.logNAME) + ".stderr"
        call('echo "' + str(params.logNAME) + ':\n ' + callString + '\n" >> ' + config["shellCallFile"], shell=True)
        call(callString, shell=True)
#-------------------------------------------------------------------------------------------------------
