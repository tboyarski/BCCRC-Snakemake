#-----------------------------------------------------------------------------------------------------------------------------------------------------
# Author:   Tim Boyarski                                    
# Date:     2017-07-05
#-----------------------------------------------------------------------------------------------------------------------------------------------------
# Call: call("python " + ROOT_PATH + "/modules/vcfGenUtil_varScan/vcfGenUtil_varScan.py " + YAMLFILE + " " + CLUSTERFILE + " " + SNAKEFILE, shell=True)
# Input:                                    .mpileup
#
# Output:                                   .varScan.mpileup2cns
#
# Purpose: Generate concensus calls from a '.mpileup' file
#
#   *** NOTE *** Input files are always kept. No way via this 
#       script to automate their destruction. This was done to
#       avoid the risk of deleting the '.mpileup' files as they
#       cannot be regenerated from this output.
#-----------------------------------------------------------------------------------------------------------------------------------------------------
# PYTHON PACKAGES #
#------------------
# Used for timestamping the log files.
from time import localtime, strftime

# Used for system calls.
from subprocess import call
#-----------------------------------------------------------------------------------------------------------------------------------------------------



#-----------------------------------------------------------------------------------------------------------------------------------------------------
# SNAKEMAKE RULE #
#-----------------
rule conSeq:
    input:
        inputMpileup = expand("{outputDIR}/{mpileupDIR}/{{sampleCS}}.mpileup", outputDIR=config["outputDIR"], mpileupDIR=config["mpileupDIR"])
    output:
        outputCNS = expand("{outputDIR}/{vcfGenUtil_varScanDIR}/{{sampleCS}}.varScan.mpileup2cns", outputDIR=config["outputDIR"], vcfGenUtil_varScanDIR=config["vcfGenUtil_varScanDIR"])
    log:
        stdErr = "log/" + config["vcfGenUtil_varScanDIR"] + '/conSeq/conSeq_{sampleCS}.' + strftime("%Y-%m-%d.%H-%M-%S", localtime()) + '.stderr'
    run:
        # 1.A - Base call string.
        callString=config["vcfGenUtil_varScan_varScanProg"] + " mpileup2cns " + str(input.inputMpileup) + " > " + str(output.outputCNS)

        # 1.B - Differing output redirection as when not on cluster we cannot use the cluster config file.
        if config["offCluster"]:
            callString += ' 2> ' + str(log.stdErr)

        # 2.A -  Printing system calls to a local file, and then executing them.
        call('echo "#' + str(log.stdErr) + ':\n#' + callString + '\n" >> ' + config["shellCallFile"], shell=True)
        call(callString, shell=True)
#-----------------------------------------------------------------------------------------------------------------------------------------------------
