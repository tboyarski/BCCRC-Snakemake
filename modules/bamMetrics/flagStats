#-----------------------------------------------------------------------------------------------------------------------------------------------------
# Author:   Tim Boyarski
# Date:	    2017-07-07
#-----------------------------------------------------------------------------------------------------------------------------------------------------
# Call: call("python " + snakeDIR + "/modules/metricsBam/metricsBam.py " + YAMLFILE + " " + CLUSTERFILE + " " + SNAKEFILE, shell=True)
# Input:                                    .bam            
#
# Output:                                   .flatstats      
#
# Purpose: Use Samtools 'flagstat' command on a '.BAM' file.
#
#   *** NOTE *** Input files are always kept. No way via this
#       script to automate their destruction. This was done to
#       avoid the risk of deleting the '.BAM' files.
#-----------------------------------------------------------------------------------------------------------------------------------------------------
# PYTHON PACKAGES #
#------------------
# Used for timestamping the log files.
from time import localtime, strftime

# Used for system calls.
from subprocess import call
#-----------------------------------------------------------------------------------------------------------------------------------------------------



#-----------------------------------------------------------------------------------------------------------------------------------------------------
# SNAKEMAKE RULE #
#------------------
rule flagStats:
    input:
        bamFile = expand("{outputDIR}/{bamDIR}/{{sampleFS}}.bam", outputDIR=config["outputDIR"], bamDIR=config["bamDIR"])
    output:
        flagStatsFile = expand("{outputDIR}/{metricsDIR}/{{sampleFS}}.flagStats", outputDIR=config["outputDIR"], metricsDIR=config["metricsDIR"])
    log:
        stdErr = "log/" + config["bamMetricsDIR"] + '/flagStats/flagStats_{sampleFS}.' + strftime("%Y-%m-%d.%H-%M-%S", localtime()) + '.stderr'
    run: 
        # 1.A Base call string.
        callString = config["bamMetrics_samtoolsProg"] + ' flagstat ' + str(input.bamFile) + ' > ' + str(output.flagStatsFile)

        # 1.B - Differing output redirection as when not on cluster we cannot use the cluster config file.
        if config["offCluster"]:
            callString += ' 2> ' + str(log.stdErr)

        # 2.A - Printing system calls to a local file, and then executing them.
        call('echo "#' + str(log.stdErr) + ':\n#' + callString + '\n" >> ' + config["shellCallFile"], shell=True)
        call(callString, shell=True)
#-----------------------------------------------------------------------------------------------------------------------------------------------------
