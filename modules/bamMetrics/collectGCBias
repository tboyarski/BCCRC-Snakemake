#-----------------------------------------------------------
# Author:   Tim Boyarski                                    
# Date:	    2017-05-19                                      
#-----------------------------------------------------------
# Call: call("python " + snakeDIR + "/modules/metricsBam/metricsBam.py " + YAMLFILE + " " + CLUSTERFILE + " " + SNAKEFILE, shell=True)
# Input:                                    .bam   
# Output:                                   .collectGCBias  
# Purpose: Generate a multiple metrics for a '.BAM' file. 
#-----------------------------------------------------------
from time import gmtime, strftime
from subprocess import call

rule collectGCBias:
    input:
        expand("{outputDIR}/{bamDIR}/{{sampleCGCB}}.bam", outputDIR=config["outputDIR"], bamDIR=config["bamDIR"])
    output:
        expand("{outputDIR}/{metricsDIR}/{{sampleCGCB}}.collectGCBias.txt", outputDIR=config["outputDIR"], metricsDIR=config["metricsDIR"])
    params:
        outputSuffix=config["outputDIR"] + '/' + config["metricsDIR"] + '/{sampleCGCB}.collectGCBias',
        baseARGS=config["bamMetricsPicardValStringency"] + ' ' + config["bamMetricsPicardMexRec"],
        refLOC=config["inputDIR"] + '/' + config["refDIR"] + '/' + config["refFILE"],
        logNAME="collectGCBias." + strftime("%Y-%m-%d.%H-%M-%S", gmtime())
    log:
        "log/" + config["bamMetricsDIR"] + "/collectGCBias"
    run: 
        callString=config["bamMetrics_picardProg"] + ' CollectGcBiasMetrics ' + str(params.baseARGS) \
        + ' I=' + str(input) + ' O=' + str(output) + ' REFERENCE_SEQUENCE=' + str(params.refLOC) \
        + ' CHART_OUTPUT=' + str(output)[:-4] + '.pdf' \
        + ' SUMMARY_OUTPUT=' + str(output) \
        + ' 2> ' + str(log) + '/' + str(params.logNAME) + '.stderr'
        call('echo "' + str(params.logNAME) + ':\n ' + callString + '\n" >> ' + config["shellCallFile"], shell=True)
        call(callString, shell=True)
#-------------------------------------------------------------------------------------------------------
