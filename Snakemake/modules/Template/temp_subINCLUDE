#-----------------------------------------------------------
# Author:   Tim Boyarski                                    
# Date:	    2017-03-28                                      
#-----------------------------------------------------------
# Call: call("python " + snakeDIR + "/modules/XXXXXXXX/XXXXXXXX.py " + YAMLFILE + " " + CLUSTERFILE + " " + SNAKEFILE, shell=True)
# Input:                                    .XXXXXXXX   
# Output:                                   .XXXXXXXX   
# Purpose: Generate an XXXXXXXX.
#-----------------------------------------------------------
from time import gmtime, strftime
from subprocess import call

rule XXXXXXXX:
    input:
        expand("{outputDIR}/{XXXXXXXX}/{{samples}}.XXXXXXXX", outputDIR=config["outputDIR"], XXXXXXXX=config["XXXXXXXX"])
    output:
        temp(expand("{outputDIR}/{XXXXXXXX}/{{samples}}.XXXXXXXX", outputDIR=config["outputDIR"], XXXXXXXX=config["XXXXXXXX"]))
    params:
        logNAME="XXXXXXXX." + strftime("%Y-%m-%d.%H-%M-%S", gmtime()),
        XXXXXXXX="XXXXXXXX" + " " + "XXXXXXXX" + " " + "XXXXXXXX"
    log:
        "log/" + config["XXXXXXXX"]
    run: 
        call("XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX" + str(params.XXXXXXXX) + config["yamlParamter"] \
        + " 2> " + str(log) + "/" + str(params.logNAME), shell=True)
#-------------------------------------------------------------------------------------------------------
#-------------------------------------------------------------------------------------------------------
#-------------------------------------------------------------------------------------------------------
#
#
# For symlinking, look at this code from reBam/indexBAM. To be used by the last module if it is creating a differently named file.
#        "samtools index {input} {output} " \
#        "&& ln -fs $(pwd)/{output[0]} $(pwd)/{params.bamDIR}/{wildcards.samples}.bam.bai " \
#        "&& ln -fs $(pwd)/{input} $(pwd)/{params.bamDIR}/{wildcards.samples}.bam"
#        "bamsort SO=coordinate tmpfile={output}.tmp > {output}"
#
#-------------------------------------------------------------------------------------------------------
#-------------------------------------------------------------------------------------------------------
#-------------------------------------------------------------------------------------------------------
#
# When you need to use the YAML configuration variables inside if your input function.
#
#def varScanSplit(wildcards):
#   if config["varScanChrSplit"] == True:
#       return expand("{outputDIR}/{mpileDIR}/{samples}.{chr}.mpileup", outputDIR=config["outputDIR"], mpileDIR=config["mpileDIR"], chr=config["chrLIST"], samples=wildcards.samples)
#   elif config["varScanChrSplit"] == False:
#       return expand("{outputDIR}/{mpileDIR}/{samples}.mpileup", outputDIR=config["outputDIR"], mpileDIR=config["mpileDIR"], samples=wildcards.samples)
#
# rule mpileup2snp:
#     input:
#         # Function to determine the inputs depending on if split chromosome or not, wildcards is implicitly passed as an agrument.
#         varScanSplit
#
#-------------------------------------------------------------------------------------------------------
#-------------------------------------------------------------------------------------------------------
#-------------------------------------------------------------------------------------------------------
